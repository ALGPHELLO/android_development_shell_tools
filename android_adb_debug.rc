#!/bin/bash
#
# Copyright 2015-2017 Adrian DC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# === ADB Strace Helper ===
function adbst()
{
  # Usage
  if [ -z "${1}" ]; then
    echo '';
    echo ' Usage: adbst <process_name> [parameters] (strace)';
    echo '';
    return;
  fi;

  # Variables
  local cmd;
  local pid;
  local strace_exists;
  local target='/tmp';

  # Detect strace requirement
  strace_exists=$(adbsu 'if [ ! -e /system/bin/strace ]; then echo false; fi;');
  if [ ! -z "${strace_exists}" ]; then
    if [ ! -z "$(adbsu grep '64' /proc/cpuinfo)" ]; then
      adb push "${ANDROID_DEVELOPMENT_SHELL_TOOLS_FILES_STRACE_64}" "${target}/strace";
    else
      adb push "${ANDROID_DEVELOPMENT_SHELL_TOOLS_FILES_STRACE_32}" "${target}/strace";
    fi;
    adbsu "cp '${target}/strace' /system/bin/strace";
    adbsu "rm '${target}/strace'";
    adbsu 'chmod 777 /system/bin/strace';
    echo '';
  fi;

  # Get process identifier
  pid=$(adb shell ps -A | grep "${1}" | tail -n 1 | awk '{ print $2 }');
  if [ ! -z "${pid}" ]; then
    adb shell ps -A | grep "${1}";
  else
    pid=$(adb shell ps | grep "${1}" | tail -n 1 | awk '{ print $2 }');
    adb shell ps | grep "${1}";
  fi;
  echo '';

  # Abort if no process found
  if [ -z "${pid}" ]; then
    echo " Error: *${1}* process could not be found...";
    echo '';
    return;
  fi;

  # Strace the process
  cmd="adbsu /system/bin/strace -y ${2}";
  ${cmd} -s 4096 -p "${pid}";
}

# === ADB Strace Followed Helper ===
function adbstf()
{
  # Usage
  if [ -z "${1}" ]; then
    echo '';
    echo ' Usage: adbstf <process_name> (Followed strace)';
    echo '';
    return;
  fi;

  # Use ADB Strace helper
  adbst "${1}" '-f';
}
