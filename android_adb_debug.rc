#!/bin/bash
#
# Copyright 2015-2017 Adrian DC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# === ADB Strace Helper ===
function adbst()
{
  # Usage
  if [ -z "${1}" ]; then
    echo '';
    echo ' Usage: adbst <process_name> [bool_get_root] [parameters] (strace)';
    echo '';
    return;
  fi;

  # Get adb root access
  if [ -z "${2}" ]; then
    local adb=$(adbcmd);
    timeout 5 ${adb} 'wait-for-device';
    timeout 5 ${adb} root;
    timeout 5 ${adb} 'wait-for-device';
    timeout 5 ${adb} remount;
    timeout 5 ${adb} 'wait-for-device';
  fi;

  # Detect strace requirement
  local strace_exists=$(adb shell 'test -e /system/bin/strace; printf ${?}');
  if [ ${strace_exists} -ne 0 ]; then
    adb shell mkdir -p /system/bin/;
    if [ ! -z "$(adb shell cat /proc/cpuinfo | grep '64')" ]; then
      adb push "${android_development_shell_tools_files_strace_64}" /system/bin/strace;
    else
      adb push "${android_development_shell_tools_files_strace_32}" /system/bin/strace;
    fi;
    adb shell chmod 777 /system/bin/strace;
    echo '';
  fi;

  # Get process identifier
  local pid=$(adb shell ps -A | grep "${1}" | tail -n 1 | awk '{ print $2 }');
  if [ ! -z "${pid}" ]; then
    adb shell ps -A | grep "${1}";
  else
    pid=$(adb shell ps | grep "${1}" | tail -n 1 | awk '{ print $2 }');
    adb shell ps | grep "${1}";
  fi;
  echo '';

  # Abort if no process found
  if [ -z "${pid}" ]; then
    echo " Error: *${1}* process could not be found...";
    echo '';
    return;
  fi;

  # Strace the process
  adb shell /system/bin/strace ${3} -s 4096 -p ${pid};
}

# === ADB Strace Followed Helper ===
function adbstf()
{
  # Usage
  if [ -z "${1}" ]; then
    echo '';
    echo ' Usage: adbstf <process_name> [bool_get_root] (Followed strace)';
    echo '';
    return;
  fi;

  # Use ADB Strace helper
  adbst "${1}" "${2}" '-f';
}
