#!/bin/bash
# ======================================
#   Developed by Adrian DC - 2015-2017
# ======================================

# === ADB MultiROM List ===
function adbmromlist()
{
  # Usage: adbmromlist (List available MultiROM installations)

  # Variables
  local path;
  local roms;

  # List all MultiROM installations
  roms=$(mktemp);
  adb shell 'find \
             /sdcard/multirom/roms/* \
             /sdcard1/multirom-*/* \
             /external_sd/multirom-*/* \
             -maxdepth 0 -type d 2> /dev/null' \
    | grep -v '/sdcard/multirom/roms/Internal' \
    > ${roms};

  # Create ROMs list
  path='';
  echo '';
  echo -e " \e[1;37m[ MultiROM installations ]\e[0m";
  echo '';
  while read path; do
    echo "   ${path}";
  done < ${roms};
  echo '';
}

# === ADB MultiROM Selector ===
function adbmromselect()
{
  # Usage: adbmromselect (Select MultiROM installation for path)

  # Variables
  local cnt;
  local key;
  local options;
  local path;
  local roms;

  # List all MultiROM installations
  roms=$(mktemp);
  adb shell 'find \
             /sdcard/multirom/roms/* \
             /sdcard1/multirom-*/* \
             /external_sd/multirom-*/* \
             -maxdepth 0 -type d 2> /dev/null' \
    | grep -v '/sdcard/multirom/roms/Internal' \
    > ${roms};

  # Create ROMs selector list
  cnt=0;
  options=('None');
  path='';
  >&2 echo '';
  >&2 echo -e " \e[1;37m[ Select MultiROM installation ]\e[0m";
  >&2 echo '';
  >&2 echo "   ${cnt}: ${options[${cnt}]}";
  while read path; do
    cnt=$((${cnt} + 1));
    options[${cnt}]=${path};
    >&2 echo "   ${cnt}: ${options[${cnt}]}";
  done < ${roms};
  >&2 echo '';
  >&2 printf " \e[1;33mROM to use [0 to ${cnt}] :\e[0m ";
  >&2 read key;
  >&2 echo '';

  # Return selected ROM path
  if [ ${key} -gt 0 ] && [ ${key} -le ${cnt} ]; then
    echo ${options[${key}]};
  fi;
}

# === ADB MultiROM Kernel Injector ===
function adbmrominjector()
{
  # Variables
  local filepath=${1};

  # Detect zImage file
  if [ -z "${filepath}" ]; then
    if [ -f '.build/arch/arm64/boot/zImage' ]; then
      filepath=.build/arch/arm64/boot/zImage;
    elif [ -f '.build/arch/arm/boot/zImage' ]; then
      filepath=.build/arch/arm/boot/zImage;
    elif [ -f 'arch/arm64/boot/zImage' ]; then
      filepath=arch/arm64/boot/zImage;
    elif [ -f 'arch/arm/boot/zImage' ]; then
      filepath=arch/arm/boot/zImage;
    fi;
  fi;

  # Usage
  if [ -z "${filepath}" ] || [ ! -f "${filepath}" ]; then
    echo '';
    echo '  Usage: adbmrominjector <kernelpath> (MultiROM kernel image injector)';
    echo '';
    return;
  fi;

  # Variables
  local partitiontarget=$(androiddevicestarget boot);
  local romtarget=$(adbmromselect)/boot.img;

  # Load ROM bootimage to partition
  echo " Injecting '${romtarget}' to '${partitiontarget}'";
  echo '';
  adbsu "dd if=${partitiontarget} of=/sdcard/boot.dump";
  adbsu "dd if='${romtarget}' of=${partitiontarget}";

  # Files to device push
  adbro;
  adb push "${filepath}" /tmp/tmpkernel;
  adb push "${android_development_shell_tools_bbootimg}" /tmp/bbootimg;
  adb shell 'chmod +x /tmp/bbootimg; chmod 755 /tmp/bbootimg';

  # Kernel injection
  adb shell /tmp/bbootimg -i "${partitiontarget}";
  adb shell /tmp/bbootimg -u "${partitiontarget}" -k /tmp/tmpkernel;

  # Restore ROM bootimage to partition
  echo '';
  echo " Restoring '${partitiontarget}' to '${romtarget}'";
  echo '';
  adbsu "dd if=${partitiontarget} of='${romtarget}'";
  adbsu "dd if=/sdcard/boot.dump of=${partitiontarget}";
  adbsu 'rm -f /sdcard/boot.dump';

  # Reboot to recovery if requested
  if [ ! -z "${2}" ]; then
    adb reboot recovery;
  fi;
  echo '';
}
