#!/bin/bash
#
# Copyright 2015-2018 Adrian DC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# === Shell Entrypoint Handling ===
export ANDROID_DEVELOPMENT_SHELL_TOOLS_ENTRYPOINT=${BASH_SOURCE[0]};
export ANDROID_DEVELOPMENT_SHELL_TOOLS_ENTRYPOINT=${ANDROID_DEVELOPMENT_SHELL_TOOLS_ENTRYPOINT:-${(%):-%N}};
if [ -z "${ANDROID_DEVELOPMENT_SHELL_TOOLS_ENTRYPOINT}" ]; then
  echo '';
  echo -e ' \e[1;33mandroid_development_shell_tools by AdrianDC: \e[0;33mExecution path could not be found\e[0m';
  echo '';
  return;
fi;

# === Android Development Shell Tools Folder ===
export ANDROID_DEVELOPMENT_SHELL_TOOLS_BRANCH='master';
export ANDROID_DEVELOPMENT_SHELL_TOOLS_DIR=${ANDROID_DEVELOPMENT_SHELL_TOOLS_ENTRYPOINT%/*};
export ANDROID_DEVELOPMENT_SHELL_TOOLS_EXTENSIONS_DIR=${ANDROID_DEVELOPMENT_SHELL_TOOLS_DIR}/extensions;
export ANDROID_DEVELOPMENT_SHELL_TOOLS_PROJECT_DIR=${ANDROID_DEVELOPMENT_SHELL_TOOLS_DIR}/project;
export ANDROID_DEVELOPMENT_SHELL_TOOLS_SCRIPTS_DIR=${ANDROID_DEVELOPMENT_SHELL_TOOLS_DIR}/scripts;
export ANDROID_DEVELOPMENT_SHELL_TOOLS_SCRIPTS=();
export ANDROID_DEVELOPMENT_SHELL_TOOLS_SOURCES_DIR=${ANDROID_DEVELOPMENT_SHELL_TOOLS_DIR}/sources;
export ANDROID_DEVELOPMENT_SHELL_TOOLS_SOURCES=();

# === Android Development Shell Tools Variables ===
export ANDROID_DEVELOPMENT_SHELL_TOOLS_URL='https://github.com/AdrianDC/android_development_shell_tools';

# === Android Development Shell Tools Workspace ===
if [ -z "${ANDROID_DEVELOPMENT_SHELL_TOOLS_WORKSPACE:-${HOME}}" ]; then
  export ANDROID_DEVELOPMENT_SHELL_TOOLS_WORKSPACE=~;
fi;

# === Android Development Shell Tools Configuration ===
export ANDROID_DEVELOPMENT_SHELL_TOOLS_CONFIGURATION=${ANDROID_DEVELOPMENT_SHELL_TOOLS_WORKSPACE:-${HOME}}/.bash_android_development_shell_tools.rc;

# === Android Development Shell Tools Toolkits ===
export ANDROID_DEVELOPMENT_SHELL_TOOLS_TOOLKITS_ANDROID='|sources/android_adb|sources/android_build|sources/android_devices|sources/android_kernel|sources/android_release|sources/android_repo|sources/android_rom|sources/gerrit|sources/git|sources/host|sources/ssh|sources/uploads|extensions/linux|';
export ANDROID_DEVELOPMENT_SHELL_TOOLS_TOOLKITS_HOST='|sources/host|extensions/linux|';
export ANDROID_DEVELOPMENT_SHELL_TOOLS_TOOLKITS_GIT='|sources/git|sources/host|sources/ssh|extensions/linux|';
export ANDROID_DEVELOPMENT_SHELL_TOOLS_TOOLKITS;
ANDROID_DEVELOPMENT_SHELL_TOOLS_TOOLKITS=$(grep '^# Toolkits: ' "${ANDROID_DEVELOPMENT_SHELL_TOOLS_CONFIGURATION}" 2>/dev/null);

# === Android Development Shell Tools Sources ===
LC_ALL_HOST=${LC_ALL};
export LC_ALL=C;
echo -en '\e[1;33mshtools: \e[1;33mLoading android_development_shell_tools...\e[0m';

# Android Development Shell Tools Project
for path in "${ANDROID_DEVELOPMENT_SHELL_TOOLS_PROJECT_DIR}/"*'.rc'; do
  if [ -f "${path}" ]; then
    ANDROID_DEVELOPMENT_SHELL_TOOLS_SOURCES+=("${path}");
  fi;
done;

# Android Development Shell Tools Sources
for path in "${ANDROID_DEVELOPMENT_SHELL_TOOLS_SOURCES_DIR}/"*'/'*'.rc'; do
  if [ -f "${path}" ]; then
    ANDROID_DEVELOPMENT_SHELL_TOOLS_SOURCES+=("${path}");
  fi;
done;

# Android Development Shell Tools Extensions
for path in "${ANDROID_DEVELOPMENT_SHELL_TOOLS_EXTENSIONS_DIR}/"*'/'*'.rc'; do
  if [ -f "${path}" ]; then
    ANDROID_DEVELOPMENT_SHELL_TOOLS_SOURCES+=("${path}");
  fi;
done;

# Android Development Shell Tools Scripts
for path in "${ANDROID_DEVELOPMENT_SHELL_TOOLS_SCRIPTS_DIR}/"*'/'*'.sh'; do
  if [ -f "${path}" ]; then
    ANDROID_DEVELOPMENT_SHELL_TOOLS_SCRIPTS+=("${path}");
  fi;
done;

# Android Development Shell Tools Kits Importation
for path in "${ANDROID_DEVELOPMENT_SHELL_TOOLS_SOURCES[@]}"; do
  group=${path#${ANDROID_DEVELOPMENT_SHELL_TOOLS_DIR}/};
  group=${group%/*};
  if [ "${group}" = 'project' ] || [[ "${ANDROID_DEVELOPMENT_SHELL_TOOLS_TOOLKITS}" == *"|${group}|"* ]]; then
    source "${path}";
  fi;
done;

# Android Development Shell Tools Cleanup
echo -en "\r\033[K";
export LC_ALL=${LC_ALL_HOST};
unset LC_ALL_HOST;
unset group;
unset path;

# === Android Development Shell Tools Automated News ===
if [ ! -f "${ANDROID_DEVELOPMENT_SHELL_TOOLS_CONFIGURATION}" ]; then
  __shtools-config-news-enable;
fi;
if __shtools-config-news-active; then
  shtoolsnews true;
fi;

# === Android Development Shell Tools Automated Toolkits ===
if ! grep -q '^# Toolkits: ' "${ANDROID_DEVELOPMENT_SHELL_TOOLS_CONFIGURATION}"; then
  shtoolskits;
fi;

# === Android Development Shell Tools Prebuilt Files ===
export ANDROID_DEVELOPMENT_SHELL_TOOLS_FILES_STRACE_32=${ANDROID_DEVELOPMENT_SHELL_TOOLS_DIR}/addons/android_binaries/strace_arm32;
export ANDROID_DEVELOPMENT_SHELL_TOOLS_FILES_STRACE_64=${ANDROID_DEVELOPMENT_SHELL_TOOLS_DIR}/addons/android_binaries/strace_arm64;
export ANDROID_DEVELOPMENT_SHELL_TOOLS_FILES_TINYMIX=${ANDROID_DEVELOPMENT_SHELL_TOOLS_DIR}/addons/android_binaries/tinymix;
export ANDROID_DEVELOPMENT_SHELL_TOOLS_FLASHABLE_ANDROID_BASE=${ANDROID_DEVELOPMENT_SHELL_TOOLS_DIR}/addons/flashables/flashable_android_base.zip;
export ANDROID_DEVELOPMENT_SHELL_TOOLS_SCRIPTS_KERNEL_INJECTOR=${ANDROID_DEVELOPMENT_SHELL_TOOLS_DIR}/addons/flashables/kernel_inject;
export ANDROID_DEVELOPMENT_SHELL_TOOLS_SCRIPTS_KERNEL_INJECTOR_SH=${ANDROID_DEVELOPMENT_SHELL_TOOLS_DIR}/addons/flashables/kernel_inject.sh;
export ANDROID_DEVELOPMENT_SHELL_TOOLS_SIGNAPK_DIR=${ANDROID_DEVELOPMENT_SHELL_TOOLS_DIR}/addons/signapk;
export ANDROID_DEVELOPMENT_SHELL_TOOLS_UPDATER_FLASH_BOOT=${ANDROID_DEVELOPMENT_SHELL_TOOLS_DIR}/addons/flashables/updater_script_flash_boot;
export ANDROID_DEVELOPMENT_SHELL_TOOLS_UPDATER_FLASH_FOTA=${ANDROID_DEVELOPMENT_SHELL_TOOLS_DIR}/addons/flashables/updater_script_flash_fota;
export ANDROID_DEVELOPMENT_SHELL_TOOLS_UPDATER_INSTALL_OEM=${ANDROID_DEVELOPMENT_SHELL_TOOLS_DIR}/addons/flashables/updater_script_install_oem;
export ANDROID_DEVELOPMENT_SHELL_TOOLS_UPDATER_INSTALL_SYSTEM=${ANDROID_DEVELOPMENT_SHELL_TOOLS_DIR}/addons/flashables/updater_script_install_system;
export ANDROID_DEVELOPMENT_SHELL_TOOLS_UPDATER_KERNEL_INJECTOR=${ANDROID_DEVELOPMENT_SHELL_TOOLS_DIR}/addons/flashables/updater_script_kernel_injector;
export ANDROID_DEVELOPMENT_SHELL_TOOLS_UPDATER_MULTIROM_SECONDARY=${ANDROID_DEVELOPMENT_SHELL_TOOLS_DIR}/addons/flashables/updater_script_multirom_secondary;
