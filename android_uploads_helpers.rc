#!/bin/bash
# ======================================
#   Developed by Adrian DC - 2015-2017
# ======================================

# === Make and upload ===
function mmmupl()
{
  # Usage
  if [ -z "${1}" ]; then
    echo '';
    echo ' Usage: mmmupl <package_or_path> [bool_partial_build] (Make zip and upload)';
    echo '';
    return;
  fi;

  # Build and package zip
  export MMMZIP_BUILD_PARTIAL=${2:-true};
  mmmzip "${1}";
  export MMMZIP_BUILD_PARTIAL=;

  # Upload to Private
  fastupl "${PackageResult}" 'zip';
}

# === Bootimage File Uploader ===
function devuplboot()
{
  # Usage
  if [ -z "${1}" ]; then
    echo '';
    echo ' Usage: devuplboot <device> (Upload ROM bootimage)';
    echo '';
    return;
  fi;

  # Variables
  local cwd=$(pwd);
  local device="${1}";
  croot;

  # Rename and upload
  mv "./out/target/product/${device}/boot.img" "./out/target/product/${device}/boot-${device}.img";
  fileupl "./out/target/product/${device}/boot-${device}.img";

  # Restore path
  cd "${cwd}/";
}

# === ROM Device Upload ===
function devuplrom()
{
  # Usage
  if [ -z "${1}" ]; then
    echo '';
    echo ' Usage: devuplrom <device> [folder_path] (Upload ROM build)';
    echo '';
    return;
  fi;

  # Variables
  local cwd=$(pwd);
  local device="${1}";
  local upload="${2}";
  local target=$(codenametotarget "${device}");
  local romfiles;
  local romfile;
  if [ -z "${upload}" ]; then
    upload="Development";
  fi;

  # ROM detection
  croot;
  romfiles=$(find "./out/target/product/${device}/"*"${device}"*".zip" \
                  "./out/target/product/${device}/"*"${target}"*".zip" \
                  -mtime -1 | sort);
  romfile='';
  for romfiletest in ${romfiles}; do
    if [ -f "${romfiletest}.md5sum" ]; then
      romfile="${romfiletest}";
    fi;
  done;
  if [ -z "${romfile}" ]; then
    romfile=$(echo "${romfiles}" | head -n1 | awk '{ print $NF }');
  fi;

  # ROM upload
  if [ ! -z "${romfile}" ]; then
    fileupl "${romfile}" "${upload}";
    export android_development_shell_tools_uploaded_file="${romfile}";
  else
    export android_development_shell_tools_uploaded_file='';
  fi;

  # End of process
  cd "${cwd}";
}

# === Pushbullet ROM Status ===
function pushbrom()
{
  # Usage
  if [ -z "${1}" ]; then
    echo '';
    echo ' Usage: pushbrom <device_name> [rom_name] (Notify build success)';
    echo '';
    return;
  fi;

  # Access ROM root
  local cwd=$(pwd);
  croot;

  # Variables
  local device="${1}";
  local rom="${2:-ROM}";
  local host=$(hostname);

  # ROM file
  romfile=$(find "./out/target/product/${device}/"*"${device}"*".zip" -mmin -30 | tail -n 1);
  if [ ! -z "${romfile}" ]; then
     pushb "${host}: ${rom} for ${device} ready";
  else
     pushb "${host}: ${rom} for ${device} failed";
  fi;

  # Restore ROM path
  cd "${cwd}";
}
