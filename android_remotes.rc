#!/bin/bash
# ======================================
#   Developed by Adrian DC - 2015-2016
# ======================================

# === Git Remote Setter ===
function gitremoteset()
{
  # Usage
  if [ -z "${2}" ]; then
    echo '';
    echo ' Usage: gitremoteset <remote_name> <remote_url>';
    echo '';
    return;
  fi;

  # Set and update the remote
  git remote add ${1} ${2} 2> /dev/null;
  git remote set-url ${1} ${2};

  # Debug the remote
  printf ' \e[1;32mRemote :\e[0m ';
  git remote -v | grep ${1} \
                | grep -i '(fetch)' \
                | awk '{ printf("%s -> %s", $1, $2); }';
  echo '';
}

# === Git Remote Adapter ===
function gitremoteadaptset()
{
  # Usage
  if [ -z "${2}" ]; then
    echo '';
    echo ' Usage: gitremoteadaptset <remote_name> <remote_github> [prefix_removal] [bool_prefix_android] [bool_underscore_to_dash]';
    echo '';
    return;
  fi;

  # Variables
  local project;
  local target;
  local remote="${1:-origin}";
  local repository="${2:-LineageOS}";
  local prefix_removal="${3}";
  local prefix_android="${4}";
  local underscore_to_dash="${5}";

  # Target detection
  target=$(git remote -v \
               | grep -v -i backup \
               | grep -i github \
               | head -n 1 \
               | awk '{ print $2 }');

  # Build repository target
  if [ -z "${target}" ]; then
    project=$(git remote -v \
                 | grep -v -i github\|backup \
                 | head -n 1 \
                 | awk '{ print $2 }' \
                 | sed 's/.*\.com\///' \
                 | sed 's/platform/android/' \
                 | sed 's/\//_/g');
    echo ${project};
    target='http://github.com/'${repository}'/'${project};
  fi;

  # Remove additional content
  if [ ! -z "${prefix_android}" ] && [[ "${target}" =~ "${prefix_android}" ]]; then
    if [[ "${target}" =~ 'device_' ]]; then
      target=${target/device_/android_device_};
    else
      target=${target/platform_/android_};
    fi;
  fi;

  # Parse the target to repository
  target=$(echo ${target} \
         | sed "s/\(http:\/\/\|https:\/\/\|git:\/\/\)\(.*\)\/[^\/]*\/\(.*\)/http:\/\/\2\/${repository}\/\3/");

  # Remove additional content
  if [ ! -z "${prefix_removal}" ]; then
    target=${target//${prefix_removal}};
  fi;

  # Replace _ with -
  if [ ! -z "${underscore_to_dash}" ]; then
    target=${target//_/-};
  fi;

  # Set new remote
  gitremoteset "${remote}" "${target}";
}

# === Git Remote Verify ===
function gitremoteverify()
{
  # Usage
  if [ -z "${2}" ]; then
    echo '';
    echo ' Usage: gitremoteverify <remote_name> "command_to_run_if_missing"';
    echo '';
    return 1;
  fi;

  # Check remote existence
  git ls-remote --exit-code ${1} >/dev/null 2>&1;
  if [ ${?} -ne 0 ]; then
    echo '';
    echo -e " \e[1;32mInformation :\e[0m Remote ${1} not found, executing '${2}'...";
    ${2};
  fi;
  return ${?};
}

# === Git Remotes Helpers ===
function gitraa()   { local git_username=$(githubusername); gitremoteadaptset ${git_username} ${git_username} ''; }
function gitrai()   { gitremoteadaptset 'aicp' 'AICP' 'android_'; }
function gitraoo()  { gitremoteadaptset 'origin' "${1}" ''; }
function gitraot()  { gitremoteadaptset 'origin' 'TheMuppets' ''; }
function gitraoms() { gitremoteadaptset 'oms' 'AOSP-RRO' 'android_'; }
function gitrat()   { gitremoteadaptset 'twrp' 'TeamWin' ''; }
function gitrax()   { gitremoteadaptset 'xperia' 'XperiaMultiROM' ''; }
function gitral()   { gitremoteset lineage "${1}"; }

# === Git Remotes LineageOS Helper ===
function gitrao()
{
  if [[ "$(pwd)/" =~ "vendor/sony/" ]]; then
    gitremoteadaptset 'origin' 'TheMuppets' '' 'true';
  else
    gitremoteadaptset 'origin' 'LineageOS' '' 'true';
  fi;
}

# === Git Remotes sonyxperiadev Helper ===
function gitraos()
{
  if [[ "$(pwd)/" =~ 'kernel/sony/copyleft/' ]]; then
    gitremoteset origin https://github.com/sonyxperiadev/kernel-copyleft.git;
  elif [[ "$(pwd)/" =~ 'kernel/sony/msm/' ]]; then
    gitremoteset origin https://github.com/sonyxperiadev/kernel.git;
  elif [[ "$(pwd)/" =~ 'vendor/qcom/prebuilt/' ]]; then
    gitremoteset origin https://github.com/SuperBenevolent/aosp-vendor-qcom-prebuilt;
  elif [[ "$(pwd)/" =~ 'vendor/sony/' ]]; then
    gitremoteset origin https://github.com/SuperBenevolent/aosp-vendor-sony;
  else
    gitremoteadaptset 'origin' 'sonyxperiadev' 'android_' '' 'true';
  fi;
}

# === Git Remotes set-url Shortcuts ===
alias gitraau='git remote set-url $(githubusername)';
alias gitraou='git remote set-url origin';

# === Git Remotes Backup Helper ===
function gitrab()
{
  if pwd | grep AOSP | grep -q -e '-huashan\|-blue\|-hayabusa\|-mint\|-tsubasa'; then
    gitra8960aosp;
  elif pwd | grep AOSP | grep -q -e '-sony\|-dora'; then
    gitrasonyaosp;
  elif pwd | grep LineageOS | grep -q -e '-sony\|-z3'; then
    gitrasonylineage;
  elif pwd | grep LineageOS | grep -q -e '-dora'; then
    gitra8996lineage;
  elif pwd | grep -q AOSP; then
    gitra8960aosp;
  else
    gitra8960lineage;
  fi;
}

# === Git Remotes LineageOS (8960) Project ===
function gitra8960lineage()
{
  gitremoteset backup https://github.com/AdrianDC/lineage_development_sony8960.git;
}

# === Git Remotes LineageOS (8996) Project ===
function gitra8996lineage()
{
  gitremoteset backup https://github.com/AdrianDC/lineage_development_sony8996.git;
}

# === Git Remotes AOSP (8960) Project ===
function gitra8960aosp()
{
  if [[ "$(pwd)" =~ "frameworks/base" ]]; then
    gitremoteset backup https://github.com/AdrianDC/platform_frameworks_base.git;
  else
    gitremoteset backup https://github.com/AdrianDC/aosp_development_sony8960.git;
  fi;
}

# === Git Remotes AOSP (Sony) Project ===
function gitrasonyaosp()
{
  gitremoteset backup https://github.com/AdrianDC/aosp_development_sonyaosp.git;
}

# === Git Remotes LineageOS (Sony) Project ===
function gitrasonylineage()
{
  gitremoteset backup https://github.com/AdrianDC/lineage_development_sonyaosp.git;
}

# === Git Remotes MultiROM (Sony) Project ===
function gitramultirom()
{
  gitremoteset backup https://github.com/AdrianDC/multirom_development_sony.git;
}

# === Git Remotes TWRP (Sony) Project ===
function gitratwrp()
{
  gitremoteset backup https://github.com/AdrianDC/twrp_development_sony.git;
}
