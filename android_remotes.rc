#!/bin/bash
# ======================================
#   Developed by Adrian DC - 2015-2016
# ======================================

# === Git Remote Setter ===
function gitremoteset()
{
  # Usage
  if [ -z "${2}" ]; then
    echo '';
    echo ' Usage: gitremoteset <remote_name> <remote_url>';
    echo '';
    return;
  fi;

  # Set and update the remote
  git remote add ${1} ${2} 2> /dev/null;
  git remote set-url ${1} ${2};

  # Debug the remote
  printf ' \e[1;32mRemote :\e[0m ';
  git remote -v | grep ${1} \
                | grep -i '(fetch)' \
                | awk '{ printf("%s -> %s", $1, $2); }';
  echo '';
}

# === Git Remote Adapter ===
function gitremoteadaptset()
{
  # Usage
  if [ -z "${2}" ]; then
    echo '';
    echo ' Usage: gitremoteadaptset <remote_name> <remote_github> [prefix_removal] [bool_prefix_android]';
    echo '';
    return;
  fi;

  # Variables
  local project;
  local target;
  local remote="${1:-origin}";
  local repository="${2:-CyanogenMod}";
  local prefix_removal="${3}";
  local prefix_android="${4}";

  # Target detection
  target=$(git remote -v \
               | grep -v -i backup \
               | grep -i github \
               | head -n 1 \
               | awk '{ print $2 }');

  # Build repository target
  if [ -z "${target}" ]; then
    project=$(git remote -v \
                 | grep -v -i github\|backup \
                 | head -n 1 \
                 | awk '{ print $2 }' \
                 | sed 's/.*\.com\///' \
                 | sed 's/platform/android/' \
                 | sed 's/\//_/g');
    echo ${project};
    target='http://github.com/'${repository}'/'${project};
  fi;

  # Remove additional content
  if [ ! -z "${prefix_android}" ]; then
    if [[ "${target}" =~ 'device_' ]]; then
      target=${target/device_/android_device_};
    else
      target=${target/platform_/android_};
    fi;
  fi;

  # Parse the target to repository
  echo ${target};
  target=$(echo ${target} \
         | sed "s/\(http:\/\/\|https:\/\/\|git:\/\/\)\(.*\)\/[^\/]*\/\(.*\)/http:\/\/\2\/${repository}\/\3/");

  # Remove additional content
  if [ ! -z "${prefix_removal}" ]; then
    target=${target//${prefix_removal}};
  fi;

  # Set new remote
  gitremoteset "${remote}" "${target}";
}

# === Git Remotes Helpers ===
function gitraa()   { gitremoteadaptset 'AdrianDC' 'AdrianDC' ''; }
function gitrai()   { gitremoteadaptset 'aicp' 'AICP' 'android_'; }
function gitrao()   { gitremoteadaptset 'origin' 'CyanogenMod' '' 'true'; }
function gitraoo()  { gitremoteadaptset 'origin' "${1}" ''; }
function gitraot()  { gitremoteadaptset 'origin' 'TheMuppets' ''; }
function gitraoms() { gitremoteadaptset 'oms' 'AOSP-RRO' 'android_'; }
function gitrat()   { gitremoteadaptset 'twrp' 'TeamWin' ''; }
function gitrax()   { gitremoteadaptset 'xperia' 'XperiaMultiROM' ''; }
function gitrab()   { gitremoteset backup https://github.com/AdrianDC/cm_development_sony8960.git; }
function gitrac()   { gitremoteset cm "${1}"; }
function gitradb()  { gitremoteset backup https://github.com/AdrianDC/device-sony-dora-bringup.git; }

# === Git Remotes sonyxperiadev Helper ===
function gitraos()
{
  if [[ "$(pwd)/" =~ "kernel/sony/msm/" ]]; then
    gitremoteset origin https://github.com/sonyxperiadev/kernel.git;
  else
    gitremoteadaptset 'origin' 'sonyxperiadev' 'android_';
  fi;
}

# === Git Remotes set-url Shortcuts ===
alias gitraau='git remote set-url AdrianDC';
alias gitraou='git remote set-url origin';

# === Git Remotes AOSP (8960) Project ===
function gitrasony8960()
{
  if [[ "$(pwd)" =~ "frameworks/base" ]]; then
    gitremoteset backup https://github.com/AdrianDC/platform_frameworks_base.git;
  else
    gitremoteset backup https://github.com/AdrianDC/aosp_development_sony8960.git;
  fi;
}

# === Git Remotes AOSP (Sony) Project ===
function gitrasonyaosp()
{
  gitremoteset backup https://github.com/AdrianDC/aosp_development_sonyaosp.git;
}

# === Git Remotes CM (Sony) Project ===
function gitrasonycm()
{
  gitremoteset backup https://github.com/AdrianDC/cm_development_sonyaosp.git;
}
