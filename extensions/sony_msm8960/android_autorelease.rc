#!/bin/bash
#
# Copyright 2015-2017 Adrian DC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# === AOSP 8960 Automatic Releaser ===
function autoreleaseaospsony8960()
{
  # Usage: autoreleaseaospsony8960 [devices] (Automated AOSP Sony 8960 releaser)

  # AndroidDev
  cdand;

  # When option enabled, sync repository tree
  if ! shtools-builds-nosync-active && [ -z "${1}" ]; then
    cdaosp;
    reposy;
  fi;

  # Devices to build
  local devices=${1:-huashan mint hayabusa tsubasa};

  # Walk through devices
  for device in ${devices}; do

    # Access device repository and when option enabled, sync tree
    if ! pathchanged cdaosp 8960 && ! shtools-builds-nosync-active; then
      reposy;
    fi;

    # ROM patcher
    if ! aospsony8960npatcher; then
      continue;
    fi;

    # ROM build and release
    romautorelease "${device}" aosp;

  done;

  # When option enabled, clean out folder
  if shtools-builds-clean-active; then
    echo '';
    echo ' romautorelease: Cleaning out folder...';
    rm -rfv out &> /dev/null;
    echo '';
  fi;
}

# === LineageOS Automatic Releaser ===
function autoreleaselineagesony8960()
{
  # Usage: autoreleaselineagesony8960 [devices] (Automated LineageOS Sony 8960 releaser)

  # AndroidDev
  cdand;

  # When option enabled, sync repository tree
  if ! shtools-builds-nosync-active && [ -z "${1}" ]; then
    cdlineage;
    reposy;
  fi;

  # Devices to build
  local devices=${1:-huashan mint hayabusa tsubasa};

  # Walk through devices
  for device in ${devices}; do

    # Access device repository and when option enabled, sync tree
    if ! pathchanged cdlineage "${device}" && ! shtools-builds-nosync-active; then
      reposy;
    fi;

    # Import pending reviews
    if ! lineagepatcher; then
      continue;
    fi;

    # ROM build and release
    romautorelease "${device}" lineage;

  done;

  # When option enabled, clean out folder
  if shtools-builds-clean-active; then
    echo '';
    echo ' romautorelease: Cleaning out folder...';
    rm -rfv out &> /dev/null;
    echo '';
  fi;
}

# === ResurrectionRemix Sony 8960 Automatic Releaser ===
function autoreleaserrsony8960()
{
  # Usage: autoreleaserrsony8960 [devices] (Automated RR Sony 8960 releaser)

  # AndroidDev
  cdand;

  # When option enabled, sync tree
  if ! shtools-builds-nosync-active; then
    cdlineage;
    reposy;
    cdrr;
    reposy;
  fi;

  # Devices to build
  local devices=${1:-huashan mint hayabusa tsubasa nicki};

  # Walk through devices
  for device in ${devices}; do

    # ROM build and release
    romautorelease "${device}" rr;

  done;

  # When option enabled, clean out folder
  if shtools-builds-clean-active; then
    echo '';
    echo ' romautorelease: Cleaning out folder...';
    rm -rfv out &> /dev/null;
    echo '';
  fi;
}

# === ROM AOSP-CAF Sony 8960 Releaser ===
function autoreleasecafsony8960()
{
  # Usage: autoreleasecafsony8960 [devices] (Automated AOSP-CAF Sony 8960 releaser)

  # AndroidDev
  cdand;

  # Access project repository
  cdaospcaf;

  # When option enabled, sync tree
  if ! shtools-builds-nosync-active; then
    reposycl;
  fi;

  # Devices to build
  local devices=${1:-huashan mint hayabusa tsubasa};

  # Walk through devices
  for device in ${devices}; do

    # ROM build and release
    romautorelease "${device}" caf;

  done;

  # When option enabled, clean out folder
  if shtools-builds-clean-active; then
    echo '';
    echo ' romautorelease: Cleaning out folder...';
    rm -rfv out &> /dev/null;
    echo '';
  fi;
}

# === AOSP 8960 Automatic Releaser ===
function autoreleaseaospsony8960master()
{
  # Usage
  if [ -z "${1}" ]; then
    echo '';
    echo ' Usage: autoreleaseaospsony8960master <devices> (Automated AOSP Master Sony 8960 releaser)';
    echo '';
    return;
  fi;

  # AndroidDev
  cdand;

  # When option enabled, sync repository tree
  if ! shtools-builds-nosync-active && [ -z "${1}" ]; then
    cdaosp;
    reposy;
  fi;

  # Enable bringup build option
  local bringup_active=;
  if shtools-builds-bringup-active; then
    bringup_active=true;
  else
    shtools-builds-bringup-enable;
  fi;

  # Enable debug build option
  local debug_active=;
  if shtools-builds-debug-active; then
    debug_active=true;
  else
    shtools-builds-debug-enable;
  fi;

  # Devices to build
  local devices=${1};

  # Walk through devices
  for device in ${devices}; do

    # Access device repository and when option enabled, sync tree
    if ! pathchanged cdaosp master && ! shtools-builds-nosync-active; then
      reposy;
    fi;

    # ROM patcher
    if ! aospsony8960masterpatcher 'a'; then
      continue;
    fi;

    # ROM build and release
    romautorelease "${device}" aosp;

  done;

  # When option enabled, clean out folder
  if shtools-builds-clean-active; then
    echo '';
    echo ' romautorelease: Cleaning out folder...';
    rm -rfv out &> /dev/null;
    echo '';
  fi;

  # Restore bringup build option
  if [ -z "${bringup_active}" ]; then
    shtools-builds-bringup-disable;
  fi;

  # Restore debug build option
  if [ -z "${debug_active}" ]; then
    shtools-builds-debug-disable;
  fi;
}
