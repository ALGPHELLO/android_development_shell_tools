#!/bin/bash
#
# Copyright 2015-2017 Adrian DC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# === Standalone Source Helper ===
# source <(curl -Ls https://github.com/AdrianDC/android_development_shell_tools/raw/master/android_repo_changes.rc)

# === Repo Changes Logger ===
function repochanges()
{
  # Usage: repochanges ["ignored_projects"] (Detect all repo projects differences)

  # Variables
  local ignored_projects=external/;
  if [ ! -z "${1}" ]; then
    ignored_projects=${1};
  fi;

  # Diff execution
  echo '';
  echo -n ' Scanning...';
  repo forall -j"$(grep -c ^processor /proc/cpuinfo)" -c "

     # Filter out projects
     if [ ! -z \$(echo \"\${REPO_PATH}\" | grep -i \"${ignored_projects}\") ]; then
       echo -en  \"\r\033[K Ignoring \${REPO_PROJECT} [\${REPO_REMOTE}/\${REPO_RREV##*/}] \";

     # Study projects
     else

       # Show and fetch projects
       echo -en  \"\r\033[K Scanning \${REPO_PROJECT} [\${REPO_REMOTE}/\${REPO_RREV##*/}] \";
       git fetch --quiet \${REPO_REMOTE} \${REPO_RREV##*/};

       # Detect new remote commits
       changescount=\$(git rev-list --right-only --count HEAD...FETCH_HEAD);
       if [ \${changescount} -ne 0 ]; then
         echo -en  \"\r\033[K Project \${REPO_PROJECT}: \${changescount} remote updates\";
         echo '';
         git --no-pager log --pretty=oneline --abbrev-commit --max-count=\${changescount} FETCH_HEAD;
         echo '';
       fi;

       # Detect local commits
       changescount=\$(git rev-list --left-only --count HEAD...FETCH_HEAD);
       if [ \${changescount} -ne 0 ]; then
         echo -en  \"\r\033[K Project \${REPO_PROJECT}: \${changescount} local changes\";
         echo '';
         git --no-pager log --pretty=oneline --abbrev-commit --max-count=\${changescount} HEAD;
         echo '';
       fi;

       # Detect local differences
       if [ \$(git diff --quiet; echo \${?}) -ne 0 ]; then
         echo -en  \"\r\033[K Project \${REPO_PROJECT}: Unmerged differences\";
         echo '';
         git --no-pager diff;
         echo '';
       fi;

     fi;
    " 2> /dev/null;

  # Done
  echo '';
  echo '';
}
