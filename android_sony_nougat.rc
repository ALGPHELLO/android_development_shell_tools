#!/bin/bash
# ======================================
#   Developed by Adrian DC - 2015-2016
# ======================================

# === SONY Nougat Patcher ===
function sonynpatcher()
{
  # Repo root
  if [ -z "$(type -t croot)" ]; then
    while [ ! -e './build/envsetup.sh' ]; do
      cd ../;
    done;
    source ./build/envsetup.sh;
  fi;
  croot;

  # ==========================================================
  # Projects loader
  local git_revs_count;
  local git_revs_count_local;
  local path_branch;
  local project_github;
  local project_unfinished;
  for path in \
    build \
    external/toybox \
    hardware/qcom/audio \
    hardware/qcom/display \
    hardware/qcom/media \
    packages/apps/Music \
    system/core;
  do

    # Project selection
    path_branch=${path//\//_};
    echo '';
    echo " === ${path} [${path_branch}] ===";
    croot;
    cd ${path}/;

    # Targets selection
    project_github='https://github.com/AdrianDC/aosp_development_msm8996.git';

    # Loop until project ready
    project_unfinished=1;
    while [ ${project_unfinished} -eq 1 ]; do

      # Fetch and compare
      git fetch ${project_github} ${path_branch};
      git_revs_count=$(git rev-list --left-right --count HEAD...FETCH_HEAD | tail -n 1);
      git_revs_count_local=$(echo "${git_revs_count}" | awk '{ print $1 }');
      git_revs_count_remote=$(echo "${git_revs_count}" | awk '{ print $2 }');
      echo " Differences: ${git_revs_count}";

      # Handle unupdated projects
      if [ ${git_revs_count_local} -ne 0 ]; then
        echo '';
        printf '  > Rebase onto newest changes [y/N] ? ';
        read key;

        # Rebase the tree
        if [[ "${key}" == 'y' ]] || [[ "${key}" == 'Y' ]]; then
          git cherry-pick --abort;
          git cherry-pick FETCH_HEAD~${git_revs_count_remote}..FETCH_HEAD;
          aospprojectpusher;
        fi;

      # Project is ready, break the loop
      else
        project_unfinished=0;
      fi;

    done;

    # Pause if needed
    git reset --hard FETCH_HEAD; git stash -u;

  done;

  # ==========================================================
  # repo root
  echo '';
  croot;
}
