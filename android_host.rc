#!/bin/bash
#
# Copyright 2015-2017 Adrian DC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# === Standalone Source Helper ===
# source <(curl -Ls https://github.com/AdrianDC/android_development_shell_tools/raw/master/android_host.rc)

# === File Editor ===
function fileedit()
{
  # Usage
  if [ -z "${1}" ]; then
    echo '';
    echo ' Usage: fileedit <paths> (Files editor for most environments)';
    echo '';
    return;
  fi;

  # Variables
  local opened;

  # Files editor for most environments
  for file in "${@}"; do

    # Filter only files
    if [ ! -f "${file}" ]; then
      echo " fileedit: '${file}' not found";
      continue;
    fi;

    # Resolve symlink paths
    file=$(readlink -f "${file}");

    # GUI xdg editor
    xdg-open "${file}" 2> /dev/null;
    opened=${?};

    # GUI notepad++ editor
    if [ ${opened} -ne 0 ] && [ ! -z "$(type -t notepad++ 2> /dev/null)" ]; then
      [ "$(nohup notepad++ -nosession "${file}" > /dev/null 2>&1 & echo ${?})" -eq 0 ] && opened=0;
    fi;

    # Terminal nano editor
    if [ ${opened} -ne 0 ] && [ ! -z "$(type -t nano 2> /dev/null)" ]; then
      nano "${file}";
      opened=${?};
    fi;

    # Terminal vim editor
    if [ ${opened} -ne 0 ] && [ ! -z "$(type -t vim 2> /dev/null)" ]; then
      vim "${file}";
      opened=${?};
    fi;

    # Unknown environment
    if [ ${opened} -ne 0 ]; then
      echo " Found in ${file}";
    fi;

  done;
}

# === File Editor Shortcut ===
alias fe='fileedit';

# === Director Opener ===
function diropen()
{
  # Usage
  if [ ! -d "${1}" ]; then
    echo '';
    echo ' Usage: diropen <path> (Directory opener for most environments)';
    echo '';
    return;
  fi;

  # Variables
  local opened;

  # GUI xdg directory viewer
  xdg-open "${1}" 2> /dev/null;
  opened=${?};

  # GUI explorer directory viewer
  if [ ${opened} -ne 0 ] && [ ! -z "$(type -t explorer 2> /dev/null)" ]; then
    explorer "${1}";
    opened=0;
  fi;

  # Unknown environment
  if [ ${opened} -ne 0 ]; then
    cd "${1}";
  fi;
}
