#!/bin/bash
#
# Copyright 2015-2017 Adrian DC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# === Repo Compare Tags ===
function repocomparetags()
{
  # Usage
  if [ -z "${1}" ]; then
    echo '';
    echo ' Usage: repocomparetags <tag_to_compare_to_android_branch> [ignore_account_LineageOS] (Helper to compare with tags)';
    echo ' Information: Need to be started from the repo root';
    echo '';
    return;
  fi;

  # Default variables
  local default_ignore_account=LineageOS;
  local default_filtered_projects=chromium-webview;

  # Variables
  local upstream_to_compare=${1};
  local ignore_account=${2:-${default_ignore_account}};

  # Diff execution
  echo '';
  echo -n ' Scanning...';
  repo forall -j1 -c "

     # Filter out projects
     if [ ! -z \$(echo \"\${REPO_PROJECT}\" | grep -i \"${ignore_account}\") ] || \
             [ ! -z \$(echo \"\${REPO_PROJECT}\" | grep -i \"${default_filtered_projects}\") ]; then
       echo -en \"\r\033[K Ignoring \${REPO_PROJECT} [\${REPO_REMOTE}/\${REPO_RREV##*/}] \";
       exit;
     fi;

     # Create the AOSP path
     project_upstream=https://android.googlesource.com;
     if [ ! \"\${REPO_PATH%%/*}\" = 'device' ]; then
         project_upstream=\${project_upstream}/platform;
     fi;
     project_upstream=\${project_upstream}/\${REPO_PATH};
     if [ \"\${REPO_PATH}\" = 'build/make' ]; then
         project_upstream=\${project_upstream%\/make};
     fi;

     # Show and fetch projects
     echo -en \"\r\033[K Scanning \${REPO_PROJECT} [\${REPO_REMOTE}/\${REPO_RREV##*/}] \";
     if ! git fetch -v \${project_upstream} ${upstream_to_compare}; then
       exit;
     fi;
     upstream_head_compare=\$(git rev-parse FETCH_HEAD);

     # Detect local differences
     if ! git diff --quiet \${REPO_LREV} \${upstream_head_compare}; then
       echo -e '\r\033[K\e[1;31m';
       echo '=========================================================================================';
       echo \"Project \${REPO_PROJECT}: Local '\${REPO_RREV}' - Remote '${upstream_to_compare}'\";
       echo -e '\e[0m';
       git --no-pager diff \${REPO_LREV} \${upstream_head_compare};
       echo '';
     fi;

    " 2> /dev/null;

  # Done
  echo -e  '\r\033[K Done searching';
  echo '';
}
