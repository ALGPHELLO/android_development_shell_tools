#!/bin/bash
# ======================================
#   Developed by Adrian DC - 2015-2017
# ======================================

# === Sepolicies Extractor ===
function sepaud()
{
  cat ${1} | grep -a avc.*denied;
  cat ${1} | grep -a 'does not have a SELinux domain defined';
  cat ${1} | grep -a avc.*denied | audit2allow -p sepolicy;
}

# === ADB Intents ===
alias adbintents='adb shell dumpsys package r > intents.txt';
alias adbcamera='adb shell pm enable com.android.camera2/com.android.camera.CameraLauncher; \
                 adb shell pm enable com.google.android.GoogleCamera/com.android.camera.CameraLauncher; \
                 adb shell "am start -a android.media.action.IMAGE_CAPTURE"';
alias adblkl='adb root; adb wait-for-device; adb shell killall zigote; adbl';

# === ADB Crash Debuggers ===
function adbpk()
{
  pid=$(adb shell ps | grep mediaserver | awk '{ print $2 }');
  adb root; adb 'wait-for-device';
  adb logcat -c;
  adb shell kill ${pid};
  adb shell ps | grep mediaserver;
  sleep 2; adbl;
}
function adbms()
{
  pid=$(adb shell ps | grep mediaserver | awk '{ print $2 }');
  adb root; adb 'wait-for-device';
  adb logcat -c;
  adb shell kill ${pid};
  pid=$(adb shell ps | grep mediaserver | awk '{ print $2 }');
  adb shell strace -p ${pid};
}

function adblibs() { adb shell grep -air "${1}" ${2:-/system/lib/}; }
alias ndkstack="ndk-stack -sym ${ANDROID_DEV_DRIVE}/out/target/product/huashan/symbols -dump";
function adbwtch() { adbr; while [ 1 ]; do adb shell cat "${1}"; done; }

function adbdu()
{
  tmp=$(mktemp);
  adbro;
  adbsu 'du /data/ | sort -hr' > ${tmp};
  gedit ${tmp};
}

# === ADB Property Radio Logs ===
function adbpropradiolog()
{
  # Variable
  local cmd;
  local property='persist.radio.adb_log_on';
  echo '';

  # Get property
  cmd="adb shell getprop ${property}";
  printf " ${cmd} > ";
  ${cmd};

  # Set property
  cmd="adb shell setprop ${property} ${1}";
  echo " ${cmd}";
  adb root;
  ${cmd};

  # Get property
  cmd="adb shell getprop ${property}";
  printf " ${cmd} > ";
  ${cmd};
  echo '';
}

# === ADB Root Stock ===
function adbrstock()
{
  adb shell su -c 'setprop ro.secure 0; setprop ro.debuggable 1; setprop persist.service.adb.enable 1';
  adb shell getprop ro.secure;
}

# === ADB Alsa Reader ===
function adbalsa()
{
  printf '' | tee alsalog;
  adb shell "cat /proc/asound/card0/id" | tee -a alsalog;
  for line in $(adb shell find /proc/asound/card0 -name info); do
    path=$(printf ${line} | tr -dc 'a-zA-Z0-9/');
    echo '' | tee -a alsalog;
    echo "=== ${path} ===" | tee -a alsalog;
    adb shell "cat ${path}" | tee -a alsalog;
    if [[ "${path}" =~ 'sub' ]]; then
      folder=$(dirname "${path}");
      adb shell "cat ${folder}/hw_params" | tee -a alsalog;
      adb shell "cat ${folder}/status" | tee -a alsalog;
      adb shell "cat ${folder}/sw_params" | tee -a alsalog;
    fi;
  done;
  adb shell "cat /proc/asound/devices" | tee -a alsalog;
  adb shell "cat /proc/asound/pcm" | tee -a alsalog;
  adb shell "cat /proc/asound/timers" | tee -a alsalog;
}
