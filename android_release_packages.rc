#!/bin/bash
# ======================================
#   Developed by Adrian DC - 2015-2016
# ======================================

# === Module Zip Maker ===
function mmmzip()
{
  CurDir=$(pwd);
  TmpDir=$(mktemp -d);
  BuildParams="$@";
  BuildPathFirst="$1";

  if [ -z "$BuildParams" ]; then
    BuildParams=".";
    BuildPathFirst=".";
  fi;

  export USE_NINJA=false;
  LogFile="$TmpDir/mmm_logs.txt";
  OutFile="pack-"$(date +'%Y%m%d-%H%M')"-$(basename $(readlink -f $BuildPathFirst))-${TARGET_PRODUCT}.zip";
  TargetFile="$(xdg-user-dir DESKTOP)/Builds/$OutFile";
  mkdir -p $(dirname $TargetFile);
  path=$(readlink -f "$BuildPathFirst");
  if [ ! -d "$path" ]; then
    croot;
  fi;

  echo "";
  echo -e " \e[1;37m[ Module Zip Maker by Adrian DC - 2016 ]\e[0m";
  echo "";

  echo "";
  if [ -d "$(readlink -f "$path")" ] || ! $(mms -v >/dev/null 2>&1); then
    mmm -B $BuildParams | tee $LogFile;
  else
    mka $BuildParams | tee $LogFile;
  fi;
  Installs=$(grep "target/product/.*/system" $LogFile | sort | uniq);

  FilesList="";
  for FilePath in ${Installs[*]}
  do
    if [[ "$FilePath" =~ "/system" ]]; then
      FilePath=$(printf "$FilePath" | tail -1 \
               | sed "s/\x1B\[[0-9;]*[JKmsu]//g" \
               | sed "s/.*\/\([^\[]*.zip\).*/\1/g");
      FileTarget=$(echo $FilePath \
                 | sed "s/.*\(system\/.*\)/\1/g");
      FileDir=$(dirname $FileTarget);
      if [ ! -d "$TmpDir/$FileDir" ]; then
        mkdir -p "$TmpDir/$FileDir";
      fi;
      if [ -f "$FilePath" ]; then
        cp "$FilePath" "$TmpDir/$FileTarget";
        FilesList="$FilesList ./$FileTarget";
      fi;
    fi;
  done;

  cd "$TmpDir/";
  if [ ! -z "$FilesList" ]; then
    cp "$bash_android_flashable_zip" "$TmpDir/$OutFile.unsigned.zip";
    zip -g "$TmpDir/$OutFile.unsigned.zip" $FilesList;
    java -jar "$bash_android_sign_apk_dir/signapk-cm121.jar" \
         -w "$bash_android_sign_apk_dir/testkey.x509.pem" \
         "$bash_android_sign_apk_dir/testkey.pk8" \
         "$TmpDir/$OutFile.unsigned.zip" \
         "$TmpDir/$OutFile";
    rm -f "$TmpDir/$OutFile.unsigned.zip";
    cp "$TmpDir/$OutFile" "$TargetFile";
    export PackageResult="$TargetFile";
    echo "";
    echo -e " \e[1;37mPackage File:\e[0m $TargetFile";
  else
    export PackageResult="";
  fi;
  echo "";

  export USE_NINJA=;
  rm -rf "$TmpDir";
  cd "$CurDir";
}

# === System Zip Maker ===
function systozip()
{
  CurDir=$(pwd);
  TmpDir=$(mktemp -d);
  BuildParams="$1";
  BuildPathFirst="$1";

  if [ -z "$BuildParams" ]; then
    BuildParams=".";
    BuildPathFirst=".";
  fi;

  LogFile="$TmpDir/mmm_logs.txt";
  OutFile="pack-"$(date +'%Y%m%d-%H%M')"-$(basename $(readlink -f $BuildPathFirst))-${TARGET_PRODUCT}.zip";
  TargetFile="$(xdg-user-dir DESKTOP)/Builds/$OutFile";
  mkdir -p $(dirname $TargetFile);
  path=$(readlink -f "$BuildPathFirst");

  echo "";
  echo -e " \e[1;37m[ System To Zip Maker by Adrian DC - 2016 ]\e[0m";
  echo "";

  Installs=$(find "$BuildParams" -type f -printf '%P\n');

  FilesList="";
  for FilePath in ${Installs[*]}
  do
    FilePath=$(printf "$FilePath" | tail -1 \
             | sed "s/\x1B\[[0-9;]*[JKmsu]//g" \
             | sed "s/.*\/\([^\[]*.zip\).*/\1/g");
    FileTarget="system/$FilePath";
    FileDir=$(dirname $FileTarget);
    if [ ! -d "$TmpDir/$FileDir" ]; then
      mkdir -p "$TmpDir/$FileDir";
    fi;
    FilePath=$(readlink -f "${BuildParams}/${FilePath}");
    if [ -f "$FilePath" ]; then
      cp "$FilePath" "$TmpDir/$FileTarget";
      FilesList="$FilesList ./$FileTarget";
    fi;
  done;

  cd "$TmpDir/";
  if [ ! -z "$FilesList" ]; then
    cp "$bash_android_flashable_zip" "$TmpDir/$OutFile.unsigned.zip";
    zip -g "$TmpDir/$OutFile.unsigned.zip" $FilesList;
    java -jar "$bash_android_sign_apk_dir/signapk-cm121.jar" \
         -w "$bash_android_sign_apk_dir/testkey.x509.pem" \
         "$bash_android_sign_apk_dir/testkey.pk8" \
         "$TmpDir/$OutFile.unsigned.zip" \
         "$TmpDir/$OutFile";
    rm -f "$TmpDir/$OutFile.unsigned.zip";
    cp "$TmpDir/$OutFile" "$TargetFile";
    export PackageResult="$TargetFile";
    echo "";
    echo -e " \e[1;37mPackage File:\e[0m $TargetFile";
  else
    export PackageResult="";
  fi;
  echo "";

  rm -rf "$TmpDir";
  cd "$CurDir";
}

# === Output Zip Maker ===
function packzip()
{
  CurDir=$(pwd);
  TmpDir=$(mktemp -d);
  BuildParams="$@";
  OutFile="pack-"$(date +'%Y%m%d-%H%M')"-$(basename $(readlink -f $1))-${TARGET_PRODUCT}.zip";
  TargetFile="$(xdg-user-dir DESKTOP)/Builds/$OutFile";
  mkdir -p $(dirname $TargetFile);

  echo "";
  echo -e " \e[1;37m[ Packed Zip Maker by Adrian DC - 2016 ]\e[0m";
  echo "";

  Installs=$@;
  FilesList="";
  for FilePath in ${Installs[*]}
  do
    FileTarget='';
    if [[ "$FilePath" =~ '/system' ]]; then
      FilePath=$(printf "$FilePath" | tail -1 \
               | sed "s/\x1B\[[0-9;]*[JKmsu]//g" \
               | sed "s/.*\/\([^\[]*.zip\).*/\1/g");
      FileTarget=$(echo $FilePath \
                 | sed "s/.*\(system\/.*\)/\1/g");
    elif [[ "$FilePath" =~ '/proprietary' ]]; then
      FilePath=$(printf "$FilePath" | tail -1 \
               | sed "s/\x1B\[[0-9;]*[JKmsu]//g" \
               | sed "s/.*\/\([^\[]*.zip\).*/\1/g");
      FileTarget=$(echo $FilePath \
                 | sed "s/.*proprietary\/\(.*\)/system\/\1/g");
    fi;
    if [ ! -z "$FileTarget" ]; then
      FileDir=$(dirname $FileTarget);
      if [ ! -d "$TmpDir/$FileDir" ]; then
        mkdir -p "$TmpDir/$FileDir";
      fi;
      if [ -f "$FilePath" ]; then
        cp "$FilePath" "$TmpDir/$FileTarget";
        FilesList="$FilesList ./$FileTarget";
      fi;
    fi;
  done;

  cd "$TmpDir/";
  cp "$bash_android_flashable_zip" "$TmpDir/$OutFile.unsigned.zip";
  if [ ! -z "$FilesList" ]; then
    zip -g "$TmpDir/$OutFile.unsigned.zip" $FilesList;
    java -jar "$bash_android_sign_apk_dir/signapk-cm121.jar" \
         -w "$bash_android_sign_apk_dir/testkey.x509.pem" \
         "$bash_android_sign_apk_dir/testkey.pk8" \
         "$TmpDir/$OutFile.unsigned.zip" \
         "$TmpDir/$OutFile";
    rm -f "$TmpDir/$OutFile.unsigned.zip";
    cp "$TmpDir/$OutFile" "$TargetFile";
    echo "";
    echo -e " \e[1;37mPackage File:\e[0m $TargetFile";
    export PackageResult="$TargetFile";
  fi;
  echo "";

  rm -rf "$TmpDir";
  cd "$CurDir";
}

# === Git Zip Maker ===
function gitzip()
{
  local file_path;
  local files_list='';
  local status;
  local tmpfile=$(mktemp);
  git diff-tree --no-commit-id --name-status -r ${1} > ${tmpfile};
  while read line; do
    status=$(echo "${line}" | awk '{ print $1 }');
    file_path=$(echo "${line}" | awk '{ print $2 }');
    if [[ "$status" =~ 'D' || "${line}" =~ '.mk' ]]; then
      continue;
    fi;
    files_list="${files_list} ${file_path}";
  done < ${tmpfile};
  packzip ${files_list};
  rm -f ${tmpfile};
}
