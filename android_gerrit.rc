#!/bin/bash
# ======================================
#   Developed by Adrian DC - 2015-2016
# ======================================

# === Gerrit Review ===
function gerritpushreview()
{
  # Variables
  local projectpath="${1}/${2}";
  if [ "${2}" = '.' ]; then
    projectpath="${1}";
  fi;
  local projectorigin=$(git remote -v \
                      | grep origin \
                      | tail -n 1);
  if [ -z "${projectorigin}" ]; then
    projectorigin=$(git remote -v \
                  | grep ${2} \
                  | tail -n 1);
  fi;
  local projectname=$(echo "${projectorigin}" \
                    | cut -f 2 \
                    | sed 's/.*\/\([^.]*\).* .*/\1/');
  local command="git push ${projectpath}/${projectname} HEAD:refs/${3:-for}/${4:-$(repogetbranch)}";

  # Command confirmation
  echo '';
  echo " ${command}";
  printf '  > Proceed with review upload (y/N) ? ';
  read key;
  echo '';
  if [[ "${key}" == 'y' || "${key}" == 'Y' ]]; then
    printf ' > Are you sure (y/N) ? ';
    read key;
    echo '';

    # Command execution
    if [[ "${key}" == 'y' || "${key}" == 'Y' ]]; then
      ${command};
      echo '';
    fi;
  fi;
}

# === Gerrit Bypasser ===
function gerritpushbypassreview()
{
  # Variables
  local projectpath="${1}/${2}";
  if [ "${2}" = '.' ]; then
    projectpath="${1}";
  fi;
  local projectorigin=$(git remote -v \
                      | grep origin \
                      | tail -n 1);
  if [ -z "${projectorigin}" ]; then
    projectorigin=$(git remote -v \
                  | grep ${2} \
                  | tail -n 1);
  fi;
  local projectname=$(echo "${projectorigin}" \
                    | cut -f 2 \
                    | sed "s/.*\/\([^.]*\).* .*/\1/");
  local command="git push ${projectpath}/${projectname} HEAD:refs/${3:-for}/${4:-$(repogetbranch)}";

  # Command execution
  echo '';
  echo " ${command}";
  ${command};
}

# === Gerrit Drafts ===
function gerritpushdrafts()
{
  # Variables
  local projectpath="${1}";
  local projectorigin=$(git remote -v \
                      | grep origin \
                      | tail -n 1);
  if [ -z "${projectorigin}" ]; then
    projectorigin=$(git remote -v \
                  | grep "${2}.*//" \
                  | tail -n 1);
  fi;
  local projectname=$(echo "${projectorigin}" \
                    | cut -f 2 \
                    | sed "s/.*\/\/[^\/]*\/\(.*\) .*/\1/");
  local command="git push ${projectpath}/${projectname} HEAD:refs/drafts/${3:-$(repogetbranch)}";

  # Command confirmation
  echo '';
  echo " ${command}";
  printf "  > Proceed with review upload (y/N) ? ";
  read key;
  echo '';

  # Command execution
  if [[ "${key}" == 'y' || "${key}" == 'Y' ]]; then
    ${command};
    echo '';
  fi;
}

# === Gerrit Username ===
function gerritusername()
{
  # Gerrit Credentials
  export GerritUsername='Username';
  export GerritHTTPUsername='Username';
  export GerritHTTPPassword='abcdefgh12345678';

  # Create  ~/.bash_android.gerrit.rc with the exports to override the credentials
  if [ -f ~/.bash_android.gerrit.rc ]; then
    source ~/.bash_android.gerrit.rc;
  fi;

  # Return username
  echo "${GerritUsername}";
}

# === Gerrit LineageOS ===
alias gitpr='gerritpushreview ssh://$(gerritusername)@review.lineageos.org:29418 LineageOS for';
alias gitprh='gerritpushreview http://review.lineageos.org LineageOS for';
alias gitprd='gerritpushdrafts ssh://$(gerritusername)@review.lineageos.org:29418 LineageOS';
alias gitprdh='gerritpushdrafts http://review.lineageos.org LineageOS';
alias gitpg='gerritpushreview ssh://$(gerritusername)@review.lineageos.org:29418 LineageOS heads';
alias gitpbr='gerritpushbypassreview ssh://$(gerritusername)@review.lineageos.org:29418 LineageOS heads';
alias gitpgh='gerritpushreview http://review.lineageos.org LineageOS heads';
alias gitprg='gitpr; gitpg';
alias gitprgy='printf "y\ny\n" | gitpr; printf "y\ny" | gitpg';

# === Gerrit AOSP ===
alias gitpraosp='gerritpushreview https://android-review.googlesource.com aosp for master';
alias gitprdaosp='gerritpushdrafts https://android-review.googlesource.com aosp master';

# === Gerrit AICP ===
alias gitpraicp='gerritpushreview ssh://$(gerritusername)@gerrit.aicp-rom.com:29418 AICP for n7.1';
alias gitprhaicp='gerritpushreview http://gerrit.aicp-rom.com AICP for n7.1';
alias gitprdaicp='gerritpushdrafts ssh://$(gerritusername)@gerrit.aicp-rom.com:29418 AICP n7.1';
alias gitprdhaicp='gerritpushdrafts http://gerrit.aicp-rom.com AICP n7.1';
alias gitpgaicp='gerritpushreview ssh://$(gerritusername)@gerrit.aicp-rom.com:29418 AICP heads n7.1';
alias gitpghaicp='gerritpushreview http://gerrit.aicp-rom.com AICP heads n7.1';
alias gitprgaicp='gitpraicp; gitpgaicp';
alias gitprghaicp='gitprhaicp; gitpghaicp';

# === Gerrit LegacyXperia ===
alias gitpr7='gerritpushreview ssh://$(gerritusername)@review.msm7x30.org:29418 LegacyXperia for';
alias gitpr7h='gerritpushreview http://review.msm7x30.org LegacyXperia for';
alias gitpr7d='gerritpushdrafts ssh://$(gerritusername)@review.msm7x30.org:29418 LegacyXperia';
alias gitpr7dh='gerritpushdrafts http://review.msm7x30.org LegacyXperia';

# === Gerrit Omni ===
alias gitpromni='gerritpushreview ssh://$(gerritusername)@gerrit.omnirom.org:29418 . for android-6.0';
alias gitprhomni='gerritpushreview http://gerrit.omnirom.org . for android-6.0';
alias gitprdomni='gerritpushdrafts ssh://$(gerritusername)@gerrit.omnirom.org:29418 . android-6.0';
alias gitprdhomni='gerritpushdrafts http://gerrit.omnirom.org . android-6.0';

# === Gerrit TWRP ===
alias gitprdtwrp='gerritpushdrafts ssh://$(gerritusername)@gerrit.twrp.me:29418 . android-6.0';

# === GitHub Origin Cherry-Pick ===
function gitcpo()
{
  # Configurations
  gitremote='origin';

  # Usage
  echo '';
  if [ -z "${1}" ] || [ -z "${2}" ]; then
    echo -e '  \e[1;37mGit Origin Cherry-Pick.';
    echo -e '    Usage :\e[0m gitcpo branch amount_of_commits';
    echo '';
    return;
  fi;

  # Cherry-Pick
  git cherry-pick --abort >/dev/null 2>&1;
  git fetch ${gitremote} ${1};
  if [ ${?} -eq 0 ] && [ ${2} -gt 0 ]; then
    git cherry-pick FETCH_HEAD~$((${2}-1))^..FETCH_HEAD;
  fi;
}
